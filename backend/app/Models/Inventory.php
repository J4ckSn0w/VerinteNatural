<?php

namespace App\Models;

use Illuminate\Database\Eloquent\Factories\HasFactory;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\SoftDeletes;
use Illuminate\Support\Facades\Auth;

class Inventory extends Model
{
    use HasFactory, SoftDeletes;

    protected $STATUS = [
        0 => 'Sin Stock',
        1 => 'Por encima del Stock',
        2 => 'Por debajo del stock minimo',
        3 => 'Sin existencias'
    ];

    protected $table = 'inventories';

    protected $fillable = [
        'available',
        'total',
        'product_id',
        'sku',
        'warehouse_id',
        'minium_stock',
        'provider_id',
        'status',
        'harvest_id'
    ];

    /*********** Methods ************/

    /********** End Methods *********/


    /*********** Relations ************/

    public function warehouse()
    {
        return $this->belongsTo(Warehouse::class);
    }

    public function units()
    {
        return $this->belongsToMany(Unit::class)->withPivot('price', 'is_default');
    }

    public function harvest()
    {
        return $this->belongsTo(Harvest::class);
    }

    public function product()
    {
        return $this->belongsTo(Product::class);
    }

    /********** End Relations *********/


    /*********** Appends ************/

    public function getWarehouseNameAttribute()
    {
        return $this->warehouse->name ?? '';
    }

    public function getStatusNameAttribute()
    {
        return $this->STATUS[$this->status] ?? '';
    }

    public function getImageAttribute()
    {
        return config('services.storage.products') . substr($this->sku, 6, 12)  . '.png';
    }

    public function getProductNameAttribute()
    {
        return $this->product->name ?? '';
    }

    /********** End Appends *********/

    // BOOT
    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub

        static::created(function ($model) {
            Log::create([
                "category" => "Inventarios",
                "action" => "Se creó el inventario " . $model->sku,
                "user_id" => Auth::id()
            ]);
        });

        static::updated(function ($model) {

            Log::create([
                "category" => "Inventarios",
                "action" => "Se actualizó el inventario " . $model->sku,
                "user_id" => Auth::id()
            ]);
        });

        static::deleted(function ($model) {

            Log::create([
                "category" => "Inventarios",
                "action" => "Se eliminó el inventario " . $model->sku,
                "user_id" => Auth::id()
            ]);
        });
    }
}
